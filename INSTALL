-------------------------------------------------------------------
DEPENDENCIES
-------------------------------------------------------------------
Make is used to build the FFPopSim library. FFPopSim depends on:
- the GNU Scientific Library (http://www.gnu.org/software/gsl/)
- BOOST (http://www.boost.org/)

The python wrapper requires:
- Distutils (http://docs.python.org/library/distutils.html)
- NumPy, SciPy, and MatPlotLib (http://www.scipy.org)

The C++ documentation, in case you want to rebuild it, requires:
- Doxygen (http://www.doxygen.org/)

The Python documentation, in case you want to rebuild it, requires:
- Sphinx (http://sphinx.pocoo.org/)

-------------------------------------------------------------------
INSTALL
-------------------------------------------------------------------
For the impatient ones, call

make

and have a look in the pkg folder.

Full instructions
-------------------------------------------------------------------
Please open the Makefile and have a look at the first few lines.
Please set the required variables in the Makefile according to your
platform (C/C++ compiler, Python interpreter, etc.) and preferences
(optimization level).

You can build the various pieces separately:

1. To build only the C++ sources, call

make src

2. To build also the Python bindings, call

make python

3. To build the documentation, call

make doc

4. To build the C++ test programs, call

make tests

To build all of them, just call

make

The C++ library and the Python module files are stored in the pkg
folder. Copy them into your system folders (e.g., /usr/local/lib and
/usr/local/lib/python2.7/site-packages) to make them available to all
users.

Documentation and examples
-------------------------------------------------------------------
C++ and Python examples are available in the tests and examples
folders. They are commented, so you should be able to understand
what it's being done there by reading the code directly.

The documentation for the C++ library can be found in pkg/doc/cpp.
The documentation for the Python bindings are in pkg/doc/python.

Troubleshooting Q&A
-------------------------------------------------------------------
Q. I cannot compile the C++ library because BOOST is not found, but
   I am sure it's installed!

A. BOOST is probably installed in a folder where your compiler cannot
   find it. This is for instance the case if you are on a Mac and
   installed it via Macports. There are two solutions: you either
   tell your compiler where your headers are via the CXXFLAGS variable
   in the Makefile; or you symlink your header folder, e.g.:

   sudo ln -s /opt/local/include /usr/local/include

   The latter solution is discouraged and should be avoided if
   possible.


Q. I cannot compile the Python bindings. The compiler complains that
   a number of gsl-related or boost-related files are not found!

A. Try opening the setup.py file and extend the list 'includes'. In
   particular, add the paths of the header files for GSL and BOOST
   on your system.


Q. The examples work, but when I try to import FFPopSim from another
   Python script I get in ImportError message!

A. In order for Python to find FFPopSim, both FFPopsim.py and
   _FFPopSim.so must be in your PYTHONPATH. A cheap way of achieving
   this on a case-by-case basis is to write at the beginning of the
   script:

   import sys
   sys.path.append('<FFPOPSIM>/pkg/python')

   where <FFPOPSIM> is the folder in which FFPopSim was compiled. A
   more elegant solution is to install the library system-wide, using
   
   python setup.py install

   Note that you will be asked root priviledges for this operation.
