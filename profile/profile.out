Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 36.37      0.04     0.04      500     0.08     0.13  haploid_highd::select_gametes()
 18.18      0.06     0.02      500     0.04     0.04  haploid_highd::get_logmean_expfitness(double)
 18.18      0.08     0.02      500     0.04     0.08  haploid_highd::mutate()
  9.09      0.09     0.01   404000     0.00     0.00  boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::m_check_invariants() const
  9.09      0.10     0.01    99575     0.00     0.00  haploid_highd::flip_single_locus(unsigned int, int)
  9.09      0.11     0.01       12     0.83     0.84  std::vector<clone_t, std::allocator<clone_t> >::_M_insert_aux(__gnu_cxx::__normal_iterator<clone_t*, std::vector<clone_t, std::allocator<clone_t> > >, clone_t const&)
  0.00      0.11     0.00   199150     0.00     0.00  haploid_highd::get_trait_difference(clone_t*, clone_t*, std::vector<int, std::allocator<int> >&, int)
  0.00      0.11     0.00   199150     0.00     0.00  hypercube_highd::get_func_diff(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >&, boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >&, std::vector<int, std::allocator<int> >&)
  0.00      0.11     0.00   199150     0.00     0.00  hypercube_highd::get_additive_coefficient(int)
  0.00      0.11     0.00   114812     0.00     0.00  bool std::binary_search<char const*, char>(char const*, char const*, char const&)
  0.00      0.11     0.00   101589     0.00     0.00  boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::resize(unsigned long, bool)
  0.00      0.11     0.00   101544     0.00     0.00  std::vector<unsigned long, std::allocator<unsigned long> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long, unsigned long const&)
  0.00      0.11     0.00   100038     0.00     0.00  boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::operator=(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&)
  0.00      0.11     0.00   100038     0.00     0.00  std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
  0.00      0.11     0.00    99891     0.00     0.00  hivpopulation::calc_individual_fitness_from_traits(clone_t*)
  0.00      0.11     0.00    99885     0.00     0.00  boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::dynamic_bitset(unsigned long, unsigned long, std::allocator<unsigned long> const&)
  0.00      0.11     0.00    99575     0.00     0.00  haploid_highd::random_clone()
  0.00      0.11     0.00    52155     0.00     0.00  boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manage(boost::detail::function::function_buffer const&, boost::detail::function::function_buffer&, boost::detail::function::functor_manager_operation_type)
  0.00      0.11     0.00    28971     0.00     0.00  _init
  0.00      0.11     0.00    17383     0.00     0.00  boost::detail::function::function_obj_invoker2<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::string> >, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string> >::invoke(boost::detail::function::function_buffer&, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>)
  0.00      0.11     0.00    17383     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::string> std::__find_if<__gnu_cxx::__normal_iterator<char*, std::string>, boost::algorithm::detail::is_any_ofF<char> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, boost::algorithm::detail::is_any_ofF<char>, std::random_access_iterator_tag)
  0.00      0.11     0.00    11589     0.00     0.00  char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag)
  0.00      0.11     0.00    11589     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
  0.00      0.11     0.00     5795     0.00     0.00  boost::detail::function::has_empty_target(...)
  0.00      0.11     0.00     5795     0.00     0.00  void std::__insertion_sort<char*>(char*, char*)
  0.00      0.11     0.00     5795     0.00     0.00  void std::__introsort_loop<char*, long>(char*, char*, long)
  0.00      0.11     0.00     5795     0.00     0.00  void std::__final_insertion_sort<char*>(char*, char*)
  0.00      0.11     0.00     5794     0.00     0.00  hypercube_highd::add_coefficient(double, std::vector<int, std::allocator<int> >)
  0.00      0.11     0.00     1000     0.00     0.00  std::vector<int, std::allocator<int> >::reserve(unsigned long)
  0.00      0.11     0.00      632     0.00     0.00  hypercube_highd::get_func(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >&)
  0.00      0.11     0.00      616     0.00     0.00  boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > boost::operator&<unsigned long, std::allocator<unsigned long> >(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&, boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&)
  0.00      0.11     0.00      500     0.00     0.00  haploid_highd::get_max_fitness()
  0.00      0.11     0.00      500     0.00     0.00  haploid_highd::add_recombinants()
  0.00      0.11     0.00      500     0.00     0.04  haploid_highd::relaxation_value()
  0.00      0.11     0.00      500     0.00     0.00  haploid_highd::swap_populations()
  0.00      0.11     0.00      500     0.00     0.00  haploid_highd::produce_random_sample(int)
  0.00      0.11     0.00      500     0.00     0.00  std::vector<clone_t, std::allocator<clone_t> >::reserve(unsigned long)
  0.00      0.11     0.00      316     0.00     0.00  haploid_highd::calc_individual_traits(clone_t*)
  0.00      0.11     0.00      308     0.00     0.00  boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::flip()
  0.00      0.11     0.00      308     0.00     0.00  boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > boost::operator|<unsigned long, std::allocator<unsigned long> >(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&, boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&)
  0.00      0.11     0.00      154     0.00     0.00  haploid_highd::crossover_pattern()
  0.00      0.11     0.00      154     0.00     0.00  haploid_highd::recombine(int, int)
  0.00      0.11     0.00       14     0.00     0.00  std::vector<coeff_single_locus_t, std::allocator<coeff_single_locus_t> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coeff_single_locus_t*, std::vector<coeff_single_locus_t, std::allocator<coeff_single_locus_t> > >, coeff_single_locus_t const&)
  0.00      0.11     0.00       10     0.00    10.91  haploid_highd::evolve(int)
  0.00      0.11     0.00        6     0.00     0.00  haploid_highd::calc_individual_fitness(clone_t*)
  0.00      0.11     0.00        5     0.00     0.00  std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  0.00      0.11     0.00        5     0.00     0.00  main
  0.00      0.11     0.00        2     0.00     0.00  haploid_highd::update_traits()
  0.00      0.11     0.00        2     0.00     0.00  haploid_highd::update_fitness()
  0.00      0.11     0.00        2     0.00     0.00  hypercube_highd::allocate_mem(int)
  0.00      0.11     0.00        2     0.00     0.00  hypercube_highd::set_up(int, int)
  0.00      0.11     0.00        2     0.00     0.00  hypercube_highd::free_mem()
  0.00      0.11     0.00        2     0.00     0.00  hypercube_highd::hypercube_highd()
  0.00      0.11     0.00        2     0.00     0.00  hypercube_highd::~hypercube_highd()
  0.00      0.11     0.00        1     0.00     0.00  haploid_highd::allocate_mem()
  0.00      0.11     0.00        1     0.00     0.84  haploid_highd::set_wildtype(unsigned long)
  0.00      0.11     0.00        1     0.00     0.84  haploid_highd::add_genotypes(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >, int)
  0.00      0.11     0.00        1     0.00     0.00  haploid_highd::calc_trait_stat()
  0.00      0.11     0.00        1     0.00     0.00  haploid_highd::calc_allele_freqs()
  0.00      0.11     0.00        1     0.00     0.00  haploid_highd::calc_fitness_stat()
  0.00      0.11     0.00        1     0.00     0.00  haploid_highd::free_mem()
  0.00      0.11     0.00        1     0.00     0.00  haploid_highd::calc_stat()
  0.00      0.11     0.00        1     0.00     0.00  haploid_highd::haploid_highd(int, int, int)
  0.00      0.11     0.00        1     0.00     0.03  haploid_highd::~haploid_highd()
  0.00      0.11     0.00        1     0.00     0.00  hivpopulation::read_replication_coefficients(std::istream&)
  0.00      0.11     0.00        1     0.00     0.84  hivpopulation::hivpopulation(int, int, double, double, double)
  0.00      0.11     0.00        1     0.00     0.00  hivpopulation::~hivpopulation()
  0.00      0.11     0.00        1     0.00     0.00  hypercube_highd::reset()
  0.00      0.11     0.00        1     0.00     0.00  hivgene::hivgene(unsigned int, unsigned int)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 9.09% of 0.11 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    0.11                 hiv_profile() [1]
                0.00    0.11      10/10          haploid_highd::evolve(int) [2]
                0.00    0.00       1/1           hivpopulation::hivpopulation(int, int, double, double, double) [10]
                0.00    0.00       1/1           haploid_highd::~haploid_highd() [16]
                0.00    0.00       5/99891       hivpopulation::calc_individual_fitness_from_traits(clone_t*) [34]
                0.00    0.00       5/6           haploid_highd::calc_individual_fitness(clone_t*) [57]
                0.00    0.00       1/1           hivpopulation::read_replication_coefficients(std::istream&) [72]
                0.00    0.00       1/1           hivpopulation::~hivpopulation() [73]
-----------------------------------------------
                0.00    0.11      10/10          hiv_profile() [1]
[2]     99.2    0.00    0.11      10         haploid_highd::evolve(int) [2]
                0.04    0.03     500/500         haploid_highd::select_gametes() [3]
                0.02    0.02     500/500         haploid_highd::mutate() [4]
                0.00    0.00     500/500         haploid_highd::add_recombinants() [14]
                0.00    0.00     500/500         haploid_highd::swap_populations() [51]
-----------------------------------------------
                0.04    0.03     500/500         haploid_highd::evolve(int) [2]
[3]     61.3    0.04    0.03     500         haploid_highd::select_gametes() [3]
                0.00    0.02     500/500         haploid_highd::relaxation_value() [6]
                0.01    0.00  295997/404000      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::m_check_invariants() const [9]
                0.00    0.00     500/500         std::vector<clone_t, std::allocator<clone_t> >::reserve(unsigned long) [13]
                0.00    0.00     500/1000        std::vector<int, std::allocator<int> >::reserve(unsigned long) [48]
                0.00    0.00       3/5           std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [58]
-----------------------------------------------
                0.02    0.02     500/500         haploid_highd::evolve(int) [2]
[4]     37.9    0.02    0.02     500         haploid_highd::mutate() [4]
                0.01    0.01   99575/99575       haploid_highd::flip_single_locus(unsigned int, int) [5]
                0.00    0.00   99575/99575       haploid_highd::random_clone() [36]
                0.00    0.00     500/500         haploid_highd::produce_random_sample(int) [52]
-----------------------------------------------
                0.01    0.01   99575/99575       haploid_highd::mutate() [4]
[5]     19.7    0.01    0.01   99575         haploid_highd::flip_single_locus(unsigned int, int) [5]
                0.01    0.00      11/12          std::vector<clone_t, std::allocator<clone_t> >::_M_insert_aux(__gnu_cxx::__normal_iterator<clone_t*, std::vector<clone_t, std::allocator<clone_t> > >, clone_t const&) [8]
                0.00    0.00   99575/404000      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::m_check_invariants() const [9]
                0.00    0.00  199150/199150      hypercube_highd::get_func_diff(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >&, boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >&, std::vector<int, std::allocator<int> >&) [27]
                0.00    0.00  199150/199150      haploid_highd::get_trait_difference(clone_t*, clone_t*, std::vector<int, std::allocator<int> >&, int) [26]
                0.00    0.00   99575/99885       boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::dynamic_bitset(unsigned long, unsigned long, std::allocator<unsigned long> const&) [35]
                0.00    0.00   99575/101589      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::resize(unsigned long, bool) [30]
                0.00    0.00   99575/100038      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::operator=(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&) [32]
                0.00    0.00   99575/99891       hivpopulation::calc_individual_fitness_from_traits(clone_t*) [34]
-----------------------------------------------
                0.00    0.02     500/500         haploid_highd::select_gametes() [3]
[6]     18.2    0.00    0.02     500         haploid_highd::relaxation_value() [6]
                0.02    0.00     500/500         haploid_highd::get_logmean_expfitness(double) [7]
                0.00    0.00     500/500         haploid_highd::get_max_fitness() [50]
-----------------------------------------------
                0.02    0.00     500/500         haploid_highd::relaxation_value() [6]
[7]     18.2    0.02    0.00     500         haploid_highd::get_logmean_expfitness(double) [7]
-----------------------------------------------
                0.00    0.00       1/12          haploid_highd::add_genotypes(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >, int) [12]
                0.01    0.00      11/12          haploid_highd::flip_single_locus(unsigned int, int) [5]
[8]      9.1    0.01    0.00      12         std::vector<clone_t, std::allocator<clone_t> >::_M_insert_aux(__gnu_cxx::__normal_iterator<clone_t*, std::vector<clone_t, std::allocator<clone_t> > >, clone_t const&) [8]
                0.00    0.00    1327/404000      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::m_check_invariants() const [9]
-----------------------------------------------
                0.00    0.00       1/404000      haploid_highd::haploid_highd(int, int, int) [19]
                0.00    0.00       1/404000      haploid_highd::add_genotypes(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >, int) [12]
                0.00    0.00       2/404000      haploid_highd::set_wildtype(unsigned long) [11]
                0.00    0.00     308/404000      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > boost::operator|<unsigned long, std::allocator<unsigned long> >(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&, boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&) [18]
                0.00    0.00     616/404000      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > boost::operator&<unsigned long, std::allocator<unsigned long> >(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&, boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&) [17]
                0.00    0.00    1011/404000      haploid_highd::~haploid_highd() [16]
                0.00    0.00    1327/404000      std::vector<clone_t, std::allocator<clone_t> >::_M_insert_aux(__gnu_cxx::__normal_iterator<clone_t*, std::vector<clone_t, std::allocator<clone_t> > >, clone_t const&) [8]
                0.00    0.00    1848/404000      haploid_highd::recombine(int, int) [15]
                0.00    0.00    3314/404000      std::vector<clone_t, std::allocator<clone_t> >::reserve(unsigned long) [13]
                0.00    0.00   99575/404000      haploid_highd::flip_single_locus(unsigned int, int) [5]
                0.01    0.00  295997/404000      haploid_highd::select_gametes() [3]
[9]      9.1    0.01    0.00  404000         boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::m_check_invariants() const [9]
-----------------------------------------------
                0.00    0.00       1/1           hiv_profile() [1]
[10]     0.8    0.00    0.00       1         hivpopulation::hivpopulation(int, int, double, double, double) [10]
                0.00    0.00       1/1           haploid_highd::set_wildtype(unsigned long) [11]
                0.00    0.00       1/1           haploid_highd::haploid_highd(int, int, int) [19]
                0.00    0.00       1/1           hivgene::hivgene(unsigned int, unsigned int) [75]
-----------------------------------------------
                0.00    0.00       1/1           hivpopulation::hivpopulation(int, int, double, double, double) [10]
[11]     0.8    0.00    0.00       1         haploid_highd::set_wildtype(unsigned long) [11]
                0.00    0.00       1/1           haploid_highd::add_genotypes(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >, int) [12]
                0.00    0.00       2/404000      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::m_check_invariants() const [9]
                0.00    0.00       1/99885       boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::dynamic_bitset(unsigned long, unsigned long, std::allocator<unsigned long> const&) [35]
                0.00    0.00       1/1           haploid_highd::calc_allele_freqs() [68]
                0.00    0.00       1/1           haploid_highd::calc_stat() [71]
-----------------------------------------------
                0.00    0.00       1/1           haploid_highd::set_wildtype(unsigned long) [11]
[12]     0.8    0.00    0.00       1         haploid_highd::add_genotypes(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >, int) [12]
                0.00    0.00       1/12          std::vector<clone_t, std::allocator<clone_t> >::_M_insert_aux(__gnu_cxx::__normal_iterator<clone_t*, std::vector<clone_t, std::allocator<clone_t> > >, clone_t const&) [8]
                0.00    0.00       1/404000      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::m_check_invariants() const [9]
                0.00    0.00       1/99885       boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::dynamic_bitset(unsigned long, unsigned long, std::allocator<unsigned long> const&) [35]
                0.00    0.00       1/100038      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::operator=(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&) [32]
                0.00    0.00       1/99891       hivpopulation::calc_individual_fitness_from_traits(clone_t*) [34]
                0.00    0.00       1/6           haploid_highd::calc_individual_fitness(clone_t*) [57]
-----------------------------------------------
                0.00    0.00     500/500         haploid_highd::select_gametes() [3]
[13]     0.1    0.00    0.00     500         std::vector<clone_t, std::allocator<clone_t> >::reserve(unsigned long) [13]
                0.00    0.00    3314/404000      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::m_check_invariants() const [9]
-----------------------------------------------
                0.00    0.00     500/500         haploid_highd::evolve(int) [2]
[14]     0.1    0.00    0.00     500         haploid_highd::add_recombinants() [14]
                0.00    0.00     154/154         haploid_highd::recombine(int, int) [15]
-----------------------------------------------
                0.00    0.00     154/154         haploid_highd::add_recombinants() [14]
[15]     0.1    0.00    0.00     154         haploid_highd::recombine(int, int) [15]
                0.00    0.00    1848/404000      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::m_check_invariants() const [9]
                0.00    0.00     616/616         boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > boost::operator&<unsigned long, std::allocator<unsigned long> >(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&, boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&) [17]
                0.00    0.00     308/308         boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > boost::operator|<unsigned long, std::allocator<unsigned long> >(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&, boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&) [18]
                0.00    0.00     462/100038      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::operator=(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&) [32]
                0.00    0.00     308/99885       boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::dynamic_bitset(unsigned long, unsigned long, std::allocator<unsigned long> const&) [35]
                0.00    0.00     308/101589      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::resize(unsigned long, bool) [30]
                0.00    0.00     308/308         boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::flip() [54]
                0.00    0.00     308/316         haploid_highd::calc_individual_traits(clone_t*) [53]
                0.00    0.00     308/99891       hivpopulation::calc_individual_fitness_from_traits(clone_t*) [34]
                0.00    0.00     154/154         haploid_highd::crossover_pattern() [55]
-----------------------------------------------
                0.00    0.00       1/1           hiv_profile() [1]
[16]     0.0    0.00    0.00       1         haploid_highd::~haploid_highd() [16]
                0.00    0.00    1011/404000      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::m_check_invariants() const [9]
                0.00    0.00       1/1           haploid_highd::free_mem() [70]
-----------------------------------------------
                0.00    0.00     616/616         haploid_highd::recombine(int, int) [15]
[17]     0.0    0.00    0.00     616         boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > boost::operator&<unsigned long, std::allocator<unsigned long> >(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&, boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&) [17]
                0.00    0.00     616/404000      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::m_check_invariants() const [9]
-----------------------------------------------
                0.00    0.00     308/308         haploid_highd::recombine(int, int) [15]
[18]     0.0    0.00    0.00     308         boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > boost::operator|<unsigned long, std::allocator<unsigned long> >(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&, boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&) [18]
                0.00    0.00     308/404000      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::m_check_invariants() const [9]
-----------------------------------------------
                0.00    0.00       1/1           hivpopulation::hivpopulation(int, int, double, double, double) [10]
[19]     0.0    0.00    0.00       1         haploid_highd::haploid_highd(int, int, int) [19]
                0.00    0.00       1/404000      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::m_check_invariants() const [9]
                0.00    0.00       1/1           haploid_highd::allocate_mem() [66]
-----------------------------------------------
                0.00    0.00       5/5           __libc_csu_init [166]
[20]     0.0    0.00    0.00       5         main [20]
-----------------------------------------------
                0.00    0.00  199150/199150      haploid_highd::flip_single_locus(unsigned int, int) [5]
[26]     0.0    0.00    0.00  199150         haploid_highd::get_trait_difference(clone_t*, clone_t*, std::vector<int, std::allocator<int> >&, int) [26]
-----------------------------------------------
                0.00    0.00  199150/199150      haploid_highd::flip_single_locus(unsigned int, int) [5]
[27]     0.0    0.00    0.00  199150         hypercube_highd::get_func_diff(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >&, boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >&, std::vector<int, std::allocator<int> >&) [27]
                0.00    0.00  199150/199150      hypercube_highd::get_additive_coefficient(int) [28]
-----------------------------------------------
                0.00    0.00  199150/199150      hypercube_highd::get_func_diff(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >&, boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >&, std::vector<int, std::allocator<int> >&) [27]
[28]     0.0    0.00    0.00  199150         hypercube_highd::get_additive_coefficient(int) [28]
-----------------------------------------------
                0.00    0.00  114812/114812      __gnu_cxx::__normal_iterator<char*, std::string> std::__find_if<__gnu_cxx::__normal_iterator<char*, std::string>, boost::algorithm::detail::is_any_ofF<char> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, boost::algorithm::detail::is_any_ofF<char>, std::random_access_iterator_tag) [40]
[29]     0.0    0.00    0.00  114812         bool std::binary_search<char const*, char>(char const*, char const*, char const&) [29]
-----------------------------------------------
                0.00    0.00     308/101589      haploid_highd::recombine(int, int) [15]
                0.00    0.00    1706/101589      haploid_highd::crossover_pattern() [55]
                0.00    0.00   99575/101589      haploid_highd::flip_single_locus(unsigned int, int) [5]
[30]     0.0    0.00    0.00  101589         boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::resize(unsigned long, bool) [30]
                0.00    0.00  101543/101544      std::vector<unsigned long, std::allocator<unsigned long> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long, unsigned long const&) [31]
-----------------------------------------------
                0.00    0.00       1/101544      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::dynamic_bitset(unsigned long, unsigned long, std::allocator<unsigned long> const&) [35]
                0.00    0.00  101543/101544      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::resize(unsigned long, bool) [30]
[31]     0.0    0.00    0.00  101544         std::vector<unsigned long, std::allocator<unsigned long> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long, unsigned long const&) [31]
-----------------------------------------------
                0.00    0.00       1/100038      haploid_highd::add_genotypes(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >, int) [12]
                0.00    0.00     462/100038      haploid_highd::recombine(int, int) [15]
                0.00    0.00   99575/100038      haploid_highd::flip_single_locus(unsigned int, int) [5]
[32]     0.0    0.00    0.00  100038         boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::operator=(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&) [32]
                0.00    0.00  100038/100038      std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [33]
-----------------------------------------------
                0.00    0.00  100038/100038      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::operator=(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&) [32]
[33]     0.0    0.00    0.00  100038         std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [33]
-----------------------------------------------
                0.00    0.00       1/99891       haploid_highd::add_genotypes(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >, int) [12]
                0.00    0.00       2/99891       haploid_highd::update_fitness() [60]
                0.00    0.00       5/99891       hiv_profile() [1]
                0.00    0.00     308/99891       haploid_highd::recombine(int, int) [15]
                0.00    0.00   99575/99891       haploid_highd::flip_single_locus(unsigned int, int) [5]
[34]     0.0    0.00    0.00   99891         hivpopulation::calc_individual_fitness_from_traits(clone_t*) [34]
-----------------------------------------------
                0.00    0.00       1/99885       haploid_highd::add_genotypes(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >, int) [12]
                0.00    0.00       1/99885       haploid_highd::set_wildtype(unsigned long) [11]
                0.00    0.00     308/99885       haploid_highd::recombine(int, int) [15]
                0.00    0.00   99575/99885       haploid_highd::flip_single_locus(unsigned int, int) [5]
[35]     0.0    0.00    0.00   99885         boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::dynamic_bitset(unsigned long, unsigned long, std::allocator<unsigned long> const&) [35]
                0.00    0.00       1/101544      std::vector<unsigned long, std::allocator<unsigned long> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long, unsigned long const&) [31]
-----------------------------------------------
                0.00    0.00   99575/99575       haploid_highd::mutate() [4]
[36]     0.0    0.00    0.00   99575         haploid_highd::random_clone() [36]
-----------------------------------------------
                0.00    0.00   52155/52155       hivpopulation::read_replication_coefficients(std::istream&) [72]
[37]     0.0    0.00    0.00   52155         boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manage(boost::detail::function::function_buffer const&, boost::detail::function::function_buffer&, boost::detail::function::functor_manager_operation_type) [37]
-----------------------------------------------
                0.00    0.00    5794/28971       std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [42]
                0.00    0.00   23177/28971       hivpopulation::read_replication_coefficients(std::istream&) [72]
[38]     0.0    0.00    0.00   28971         _init [38]
-----------------------------------------------
                0.00    0.00   17383/17383       hivpopulation::read_replication_coefficients(std::istream&) [72]
[39]     0.0    0.00    0.00   17383         boost::detail::function::function_obj_invoker2<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::string> >, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string> >::invoke(boost::detail::function::function_buffer&, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>) [39]
                0.00    0.00   17383/17383       __gnu_cxx::__normal_iterator<char*, std::string> std::__find_if<__gnu_cxx::__normal_iterator<char*, std::string>, boost::algorithm::detail::is_any_ofF<char> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, boost::algorithm::detail::is_any_ofF<char>, std::random_access_iterator_tag) [40]
-----------------------------------------------
                0.00    0.00   17383/17383       boost::detail::function::function_obj_invoker2<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::string> >, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string> >::invoke(boost::detail::function::function_buffer&, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>) [39]
[40]     0.0    0.00    0.00   17383         __gnu_cxx::__normal_iterator<char*, std::string> std::__find_if<__gnu_cxx::__normal_iterator<char*, std::string>, boost::algorithm::detail::is_any_ofF<char> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, boost::algorithm::detail::is_any_ofF<char>, std::random_access_iterator_tag) [40]
                0.00    0.00  114812/114812      bool std::binary_search<char const*, char>(char const*, char const*, char const&) [29]
-----------------------------------------------
                0.00    0.00   11589/11589       hivpopulation::read_replication_coefficients(std::istream&) [72]
[41]     0.0    0.00    0.00   11589         char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag) [41]
-----------------------------------------------
                0.00    0.00   11589/11589       hivpopulation::read_replication_coefficients(std::istream&) [72]
[42]     0.0    0.00    0.00   11589         std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [42]
                0.00    0.00    5794/28971       _init [38]
-----------------------------------------------
                0.00    0.00    5795/5795        hivpopulation::read_replication_coefficients(std::istream&) [72]
[43]     0.0    0.00    0.00    5795         boost::detail::function::has_empty_target(...) [43]
-----------------------------------------------
                0.00    0.00    5795/5795        hivpopulation::read_replication_coefficients(std::istream&) [72]
[44]     0.0    0.00    0.00    5795         void std::__insertion_sort<char*>(char*, char*) [44]
-----------------------------------------------
                0.00    0.00    5795/5795        hivpopulation::read_replication_coefficients(std::istream&) [72]
[45]     0.0    0.00    0.00    5795         void std::__introsort_loop<char*, long>(char*, char*, long) [45]
-----------------------------------------------
                0.00    0.00    5795/5795        hivpopulation::read_replication_coefficients(std::istream&) [72]
[46]     0.0    0.00    0.00    5795         void std::__final_insertion_sort<char*>(char*, char*) [46]
-----------------------------------------------
                0.00    0.00    5794/5794        hivpopulation::read_replication_coefficients(std::istream&) [72]
[47]     0.0    0.00    0.00    5794         hypercube_highd::add_coefficient(double, std::vector<int, std::allocator<int> >) [47]
                0.00    0.00      14/14          std::vector<coeff_single_locus_t, std::allocator<coeff_single_locus_t> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coeff_single_locus_t*, std::vector<coeff_single_locus_t, std::allocator<coeff_single_locus_t> > >, coeff_single_locus_t const&) [56]
-----------------------------------------------
                0.00    0.00     500/1000        haploid_highd::produce_random_sample(int) [52]
                0.00    0.00     500/1000        haploid_highd::select_gametes() [3]
[48]     0.0    0.00    0.00    1000         std::vector<int, std::allocator<int> >::reserve(unsigned long) [48]
-----------------------------------------------
                0.00    0.00     632/632         haploid_highd::calc_individual_traits(clone_t*) [53]
[49]     0.0    0.00    0.00     632         hypercube_highd::get_func(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >&) [49]
-----------------------------------------------
                0.00    0.00     500/500         haploid_highd::relaxation_value() [6]
[50]     0.0    0.00    0.00     500         haploid_highd::get_max_fitness() [50]
-----------------------------------------------
                0.00    0.00     500/500         haploid_highd::evolve(int) [2]
[51]     0.0    0.00    0.00     500         haploid_highd::swap_populations() [51]
-----------------------------------------------
                0.00    0.00     500/500         haploid_highd::mutate() [4]
[52]     0.0    0.00    0.00     500         haploid_highd::produce_random_sample(int) [52]
                0.00    0.00     500/1000        std::vector<int, std::allocator<int> >::reserve(unsigned long) [48]
                0.00    0.00       1/5           std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [58]
-----------------------------------------------
                0.00    0.00       2/316         haploid_highd::update_traits() [59]
                0.00    0.00       6/316         haploid_highd::calc_individual_fitness(clone_t*) [57]
                0.00    0.00     308/316         haploid_highd::recombine(int, int) [15]
[53]     0.0    0.00    0.00     316         haploid_highd::calc_individual_traits(clone_t*) [53]
                0.00    0.00     632/632         hypercube_highd::get_func(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >&) [49]
-----------------------------------------------
                0.00    0.00     308/308         haploid_highd::recombine(int, int) [15]
[54]     0.0    0.00    0.00     308         boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::flip() [54]
-----------------------------------------------
                0.00    0.00     154/154         haploid_highd::recombine(int, int) [15]
[55]     0.0    0.00    0.00     154         haploid_highd::crossover_pattern() [55]
                0.00    0.00    1706/101589      boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::resize(unsigned long, bool) [30]
-----------------------------------------------
                0.00    0.00      14/14          hypercube_highd::add_coefficient(double, std::vector<int, std::allocator<int> >) [47]
[56]     0.0    0.00    0.00      14         std::vector<coeff_single_locus_t, std::allocator<coeff_single_locus_t> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coeff_single_locus_t*, std::vector<coeff_single_locus_t, std::allocator<coeff_single_locus_t> > >, coeff_single_locus_t const&) [56]
-----------------------------------------------
                0.00    0.00       1/6           haploid_highd::add_genotypes(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >, int) [12]
                0.00    0.00       5/6           hiv_profile() [1]
[57]     0.0    0.00    0.00       6         haploid_highd::calc_individual_fitness(clone_t*) [57]
                0.00    0.00       6/316         haploid_highd::calc_individual_traits(clone_t*) [53]
-----------------------------------------------
                0.00    0.00       1/5           haploid_highd::produce_random_sample(int) [52]
                0.00    0.00       1/5           hivpopulation::read_replication_coefficients(std::istream&) [72]
                0.00    0.00       3/5           haploid_highd::select_gametes() [3]
[58]     0.0    0.00    0.00       5         std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [58]
-----------------------------------------------
                0.00    0.00       1/2           haploid_highd::calc_stat() [71]
                0.00    0.00       1/2           hivpopulation::read_replication_coefficients(std::istream&) [72]
[59]     0.0    0.00    0.00       2         haploid_highd::update_traits() [59]
                0.00    0.00       2/316         haploid_highd::calc_individual_traits(clone_t*) [53]
-----------------------------------------------
                0.00    0.00       1/2           haploid_highd::calc_stat() [71]
                0.00    0.00       1/2           hivpopulation::read_replication_coefficients(std::istream&) [72]
[60]     0.0    0.00    0.00       2         haploid_highd::update_fitness() [60]
                0.00    0.00       2/99891       hivpopulation::calc_individual_fitness_from_traits(clone_t*) [34]
-----------------------------------------------
                0.00    0.00       2/2           haploid_highd::allocate_mem() [66]
[61]     0.0    0.00    0.00       2         hypercube_highd::allocate_mem(int) [61]
-----------------------------------------------
                0.00    0.00       2/2           haploid_highd::allocate_mem() [66]
[62]     0.0    0.00    0.00       2         hypercube_highd::set_up(int, int) [62]
-----------------------------------------------
                0.00    0.00       2/2           hypercube_highd::~hypercube_highd() [65]
[63]     0.0    0.00    0.00       2         hypercube_highd::free_mem() [63]
-----------------------------------------------
                0.00    0.00       2/2           haploid_highd::allocate_mem() [66]
[64]     0.0    0.00    0.00       2         hypercube_highd::hypercube_highd() [64]
-----------------------------------------------
                0.00    0.00       2/2           haploid_highd::free_mem() [70]
[65]     0.0    0.00    0.00       2         hypercube_highd::~hypercube_highd() [65]
                0.00    0.00       2/2           hypercube_highd::free_mem() [63]
-----------------------------------------------
                0.00    0.00       1/1           haploid_highd::haploid_highd(int, int, int) [19]
[66]     0.0    0.00    0.00       1         haploid_highd::allocate_mem() [66]
                0.00    0.00       2/2           hypercube_highd::hypercube_highd() [64]
                0.00    0.00       2/2           hypercube_highd::allocate_mem(int) [61]
                0.00    0.00       2/2           hypercube_highd::set_up(int, int) [62]
-----------------------------------------------
                0.00    0.00       1/1           haploid_highd::calc_stat() [71]
[67]     0.0    0.00    0.00       1         haploid_highd::calc_trait_stat() [67]
-----------------------------------------------
                0.00    0.00       1/1           haploid_highd::set_wildtype(unsigned long) [11]
[68]     0.0    0.00    0.00       1         haploid_highd::calc_allele_freqs() [68]
-----------------------------------------------
                0.00    0.00       1/1           haploid_highd::calc_stat() [71]
[69]     0.0    0.00    0.00       1         haploid_highd::calc_fitness_stat() [69]
-----------------------------------------------
                0.00    0.00       1/1           haploid_highd::~haploid_highd() [16]
[70]     0.0    0.00    0.00       1         haploid_highd::free_mem() [70]
                0.00    0.00       2/2           hypercube_highd::~hypercube_highd() [65]
-----------------------------------------------
                0.00    0.00       1/1           haploid_highd::set_wildtype(unsigned long) [11]
[71]     0.0    0.00    0.00       1         haploid_highd::calc_stat() [71]
                0.00    0.00       1/2           haploid_highd::update_fitness() [60]
                0.00    0.00       1/2           haploid_highd::update_traits() [59]
                0.00    0.00       1/1           haploid_highd::calc_fitness_stat() [69]
                0.00    0.00       1/1           haploid_highd::calc_trait_stat() [67]
-----------------------------------------------
                0.00    0.00       1/1           hiv_profile() [1]
[72]     0.0    0.00    0.00       1         hivpopulation::read_replication_coefficients(std::istream&) [72]
                0.00    0.00   52155/52155       boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manage(boost::detail::function::function_buffer const&, boost::detail::function::function_buffer&, boost::detail::function::functor_manager_operation_type) [37]
                0.00    0.00   23177/28971       _init [38]
                0.00    0.00   17383/17383       boost::detail::function::function_obj_invoker2<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::string> >, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string> >::invoke(boost::detail::function::function_buffer&, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>) [39]
                0.00    0.00   11589/11589       char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag) [41]
                0.00    0.00   11589/11589       std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [42]
                0.00    0.00    5795/5795        void std::__introsort_loop<char*, long>(char*, char*, long) [45]
                0.00    0.00    5795/5795        void std::__insertion_sort<char*>(char*, char*) [44]
                0.00    0.00    5795/5795        void std::__final_insertion_sort<char*>(char*, char*) [46]
                0.00    0.00    5795/5795        boost::detail::function::has_empty_target(...) [43]
                0.00    0.00    5794/5794        hypercube_highd::add_coefficient(double, std::vector<int, std::allocator<int> >) [47]
                0.00    0.00       1/1           hypercube_highd::reset() [74]
                0.00    0.00       1/5           std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [58]
                0.00    0.00       1/2           haploid_highd::update_traits() [59]
                0.00    0.00       1/2           haploid_highd::update_fitness() [60]
-----------------------------------------------
                0.00    0.00       1/1           hiv_profile() [1]
[73]     0.0    0.00    0.00       1         hivpopulation::~hivpopulation() [73]
-----------------------------------------------
                0.00    0.00       1/1           hivpopulation::read_replication_coefficients(std::istream&) [72]
[74]     0.0    0.00    0.00       1         hypercube_highd::reset() [74]
-----------------------------------------------
                0.00    0.00       1/1           hivpopulation::hivpopulation(int, int, double, double, double) [10]
[75]     0.0    0.00    0.00       1         hivgene::hivgene(unsigned int, unsigned int) [75]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

  [66] haploid_highd::allocate_mem() [70] haploid_highd::free_mem() [37] boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manage(boost::detail::function::function_buffer const&, boost::detail::function::function_buffer&, boost::detail::function::functor_manager_operation_type)
  [36] haploid_highd::random_clone() [71] haploid_highd::calc_stat() [43] boost::detail::function::has_empty_target(...)
  [11] haploid_highd::set_wildtype(unsigned long) [15] haploid_highd::recombine(int, int) [39] boost::detail::function::function_obj_invoker2<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::string> >, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string> >::invoke(boost::detail::function::function_buffer&, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>)
  [12] haploid_highd::add_genotypes(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >, int) [19] haploid_highd::haploid_highd(int, int, int) [17] boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > boost::operator&<unsigned long, std::allocator<unsigned long> >(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&, boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&)
  [59] haploid_highd::update_traits() [16] haploid_highd::~haploid_highd() [18] boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > boost::operator|<unsigned long, std::allocator<unsigned long> >(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&, boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&)
   [3] haploid_highd::select_gametes() [72] hivpopulation::read_replication_coefficients(std::istream&) [75] hivgene::hivgene(unsigned int, unsigned int)
  [60] haploid_highd::update_fitness() [34] hivpopulation::calc_individual_fitness_from_traits(clone_t*) [9] boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::m_check_invariants() const
  [67] haploid_highd::calc_trait_stat() [10] hivpopulation::hivpopulation(int, int, double, double, double) [41] char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag)
  [50] haploid_highd::get_max_fitness() [73] hivpopulation::~hivpopulation() [56] std::vector<coeff_single_locus_t, std::allocator<coeff_single_locus_t> >::_M_insert_aux(__gnu_cxx::__normal_iterator<coeff_single_locus_t*, std::vector<coeff_single_locus_t, std::allocator<coeff_single_locus_t> > >, coeff_single_locus_t const&)
  [14] haploid_highd::add_recombinants() [61] hypercube_highd::allocate_mem(int) [8] std::vector<clone_t, std::allocator<clone_t> >::_M_insert_aux(__gnu_cxx::__normal_iterator<clone_t*, std::vector<clone_t, std::allocator<clone_t> > >, clone_t const&)
   [6] haploid_highd::relaxation_value() [27] hypercube_highd::get_func_diff(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >&, boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >&, std::vector<int, std::allocator<int> >&) [13] std::vector<clone_t, std::allocator<clone_t> >::reserve(unsigned long)
  [51] haploid_highd::swap_populations() [47] hypercube_highd::add_coefficient(double, std::vector<int, std::allocator<int> >) [42] std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
  [68] haploid_highd::calc_allele_freqs() [28] hypercube_highd::get_additive_coefficient(int) [58] std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  [69] haploid_highd::calc_fitness_stat() [74] hypercube_highd::reset() [48] std::vector<int, std::allocator<int> >::reserve(unsigned long)
  [55] haploid_highd::crossover_pattern() [62] hypercube_highd::set_up(int, int) [31] std::vector<unsigned long, std::allocator<unsigned long> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long, unsigned long const&)
   [5] haploid_highd::flip_single_locus(unsigned int, int) [63] hypercube_highd::free_mem() [33] std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
  [26] haploid_highd::get_trait_difference(clone_t*, clone_t*, std::vector<int, std::allocator<int> >&, int) [49] hypercube_highd::get_func(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >&) [29] bool std::binary_search<char const*, char>(char const*, char const*, char const&)
  [52] haploid_highd::produce_random_sample(int) [64] hypercube_highd::hypercube_highd() [44] void std::__insertion_sort<char*>(char*, char*)
  [53] haploid_highd::calc_individual_traits(clone_t*) [65] hypercube_highd::~hypercube_highd() [45] void std::__introsort_loop<char*, long>(char*, char*, long)
   [7] haploid_highd::get_logmean_expfitness(double) [54] boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::flip() [46] void std::__final_insertion_sort<char*>(char*, char*)
  [57] haploid_highd::calc_individual_fitness(clone_t*) [30] boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::resize(unsigned long, bool) [40] __gnu_cxx::__normal_iterator<char*, std::string> std::__find_if<__gnu_cxx::__normal_iterator<char*, std::string>, boost::algorithm::detail::is_any_ofF<char> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, boost::algorithm::detail::is_any_ofF<char>, std::random_access_iterator_tag)
   [2] haploid_highd::evolve(int) [35] boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::dynamic_bitset(unsigned long, unsigned long, std::allocator<unsigned long> const&) [38] _init
   [4] haploid_highd::mutate() [32] boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> >::operator=(boost::dynamic_bitset<unsigned long, std::allocator<unsigned long> > const&) [20] main
